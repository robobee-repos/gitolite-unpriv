FROM debian:jessie
LABEL maintainer "Erwin Mueller <erwin.mueller@deventm.com>"

ARG APT_CACHE
ENV GIT_ROOT /home/git/repositories
ENV GIT_USER git
ENV SSH_PORT 2222

MAINTAINER Mike Gardiner <conversationing@gmail.com>

RUN set -x \
  # Optional add proxy entries for apt.
  && if [ -n "${APT_CACHE}" ]; then \
  echo Acquire::ftp::Proxy \"$APT_CACHE\"; >> /etc/apt/apt.conf.d/08proxy;\
  echo Acquire::http::Proxy \"$APT_CACHE\"; >> /etc/apt/apt.conf.d/08proxy;\
  echo Acquire::https::Proxy \"$APT_CACHE\"; >> /etc/apt/apt.conf.d/08proxy;\
  fi

RUN set -x \
  && DEBIAN_FRONTEND=noninteractive \
  && apt-get update \
  && apt-get install -y \
    sudo openssh-server git rsync locales \
  && rm -rf /var/lib/apt/lists/* \
  && chmod o+rwX /var/log

RUN locale-gen en_US.UTF-8
RUN dpkg-reconfigure locales

# To avoid annoying "perl: warning: Setting locale failed." errors,
# do not allow the client to pass custom locals, see:
# http://stackoverflow.com/a/2510548/15677
RUN sed -i 's/^AcceptEnv LANG LC_\*$//g' /etc/ssh/sshd_config

RUN mkdir /var/run/sshd

RUN adduser --system --group --shell /bin/sh git
RUN su git -c "mkdir /home/git/bin"

RUN cd /home/git; su git -c "git clone git://github.com/sitaramc/gitolite";
RUN cd /home/git/gitolite; su git -c "git checkout v3.6.6";
RUN cd /home/git; su git -c "gitolite/install -ln";

# https://github.com/docker/docker/issues/5892
RUN chown -R git:git /home/git

# http://stackoverflow.com/questions/22547939/docker-gitlab-container-ssh-git-login-error
RUN sed -i '/session    required     pam_loginuid.so/d' /etc/pam.d/sshd

# Remove SSH host keys, so they will be generated by /init
RUN rm -f /etc/ssh/ssh_host_*

ADD rootfs/init.sh /init.sh

# Addind volume to repositories directory
VOLUME /home/git/repositories
VOLUME /etc/ssh-in

ENTRYPOINT ["/usr/sbin/init"]
CMD ["/init", "/usr/sbin/sshd", "-D"]

EXPOSE ${SSH_PORT}

# Finishing up.

ADD rootfs/docker-entrypoint.sh /docker-entrypoint.sh

RUN set -x \
  && chmod +x /docker-entrypoint.sh \
  && chown root.${GIT_USER} -R /etc/ssh \
  && chmod g+rwX /etc/ssh \
  && chmod +x /init.sh

USER ${GIT_USER}

ENV USER ${GIT_USER}

WORKDIR ${GIT_ROOT}

ENTRYPOINT ["/docker-entrypoint.sh"]

CMD ["/usr/sbin/sshd", "-D"]
