FROM debian:stretch
LABEL maintainer "Erwin Mueller <erwin.mueller@deventm.com>"

ARG APT_CACHE
ENV GIT_ROOT /home/git/repositories
ENV GIT_USER git
ENV SSH_PORT 2222

RUN set -x \
  # Optional add proxy entries for apt.
  && if [ -n "${APT_CACHE}" ]; then \
  echo Acquire::ftp::Proxy \"$APT_CACHE\"; >> /etc/apt/apt.conf.d/08proxy;\
  echo Acquire::http::Proxy \"$APT_CACHE\"; >> /etc/apt/apt.conf.d/08proxy;\
  echo Acquire::https::Proxy \"$APT_CACHE\"; >> /etc/apt/apt.conf.d/08proxy;\
  fi

RUN set -x \
  && DEBIAN_FRONTEND=noninteractive \
  && apt-get update \
  && apt-get install -y \
    sudo openssh-server git rsync locales \
  && rm -rf /var/lib/apt/lists/*

RUN set +x \
  && locale-gen en_US.UTF-8 \
  && dpkg-reconfigure locales

RUN set +x \
# To avoid annoying "perl: warning: Setting locale failed." errors,
# do not allow the client to pass custom locals, see:
# http://stackoverflow.com/a/2510548/15677
  && sed -i 's/^AcceptEnv LANG LC_\*$//g' /etc/ssh/sshd_config \
  && mkdir /var/run/sshd \
  && adduser --system --group --shell /bin/sh git \
  && su git -c "mkdir /home/git/bin" \
  && cd /home/git \
  && su git -c "git clone https://github.com/sitaramc/gitolite.git" \
  && cd /home/git/gitolite \
  && su git -c "git checkout v3.6.7" \
  && cd /home/git \
  && su git -c "gitolite/install -ln" \
# http://stackoverflow.com/questions/22547939/docker-gitlab-container-ssh-git-login-error
  && sed -i '/session    required     pam_loginuid.so/d' /etc/pam.d/sshd \
# Remove SSH host keys, so they will be generated by /init
  && rm -f /etc/ssh/ssh_host_* \
  # Move the created git to copy it later to the volume.
  && mv /home/git /home/git.dist \
  && mkdir /home/git \
  && chown ${GIT_USER}.${GIT_USER} /home/git \
  # Fix permissions.
  && chown root.${GIT_USER} -R /etc/ssh \
  && chmod g+rwX /etc/ssh \
  && chmod o+rwX /var/log

ADD rootfs/ /

RUN set -x \
  && chmod +x /*.sh

VOLUME ["/home/git"]

ENTRYPOINT ["/usr/sbin/init"]

CMD ["/init", "/usr/sbin/sshd", "-D"]

EXPOSE ${SSH_PORT}

USER ${GIT_USER}

ENV USER ${GIT_USER}

WORKDIR /home/git

ENTRYPOINT ["/docker-entrypoint.sh"]

CMD ["/usr/sbin/sshd", "-D"]
